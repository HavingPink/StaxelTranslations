language.code=tr-TR
language=Türkçe
//TODO Translate [Reference] 'Character Name'
characterDesigner.name.title=
//TODO Translate [Reference] 'Choose your character name'
characterDesigner.name.tooltip=
//TODO Translate [Reference] 'Activate'
controlHint.verb.Activate=
//TODO Translate [Reference] 'Let Follow'
controlHint.verb.CheckFollow=
//TODO Translate [Reference] 'Stop Following'
controlHint.verb.CheckUnfollow=
//TODO Translate [Reference] 'Command: Rollover'
controlHint.verb.CommandRollover=
//TODO Translate [Reference] 'Command: Sit'
controlHint.verb.CommandSit=
//TODO Translate [Reference] 'Deactivate'
controlHint.verb.Deactivate=
//TODO Translate [Reference] 'Close'
controlHint.verb.default.Close=
//TODO Translate [Reference] 'Pick Up'
controlHint.verb.default.PickUp=
//TODO Translate [Reference] 'Pet'
controlHint.verb.Pet=
//TODO Translate [Reference] 'Trash Item'
controlHint.verb.Trash=
//TODO Translate [Reference] 'Community Testers'
credits.communityTesters=
//TODO Translate [Reference] 'Nexel has encountered a critical error and needs to quit.\n\nDETAILS'
error.preamble=
//TODO Translate [Reference] 'You have moved too far away from where you started fishing.'
fishing.movedTooFar=
//TODO Translate [Reference] 'It's not looking healthy. It can't grow during {0-season}.'
hintText.checkPlantGrowth.wiltedSeason=
//TODO Translate [Reference] 'Set NoClip to {0-bool}.'
nexel.commands.noClip.Success=
//TODO Translate [Reference] 'Failed to find island with code: '{0-input}'
nexel.commands.teleportToIsland.FailedToFind=
//TODO Translate [Reference] 'Not enough parameters, needs parameter: 'island'. Optionally includes: 'x', 'y', 'z'.'
nexel.commands.teleportToIsland.NotEnoughParameters=
//TODO Translate [Reference] 'Client must finish loading island before teleporting again.'
nexel.commands.teleportToIsland.NotReady=
//TODO Translate [Reference] 'Teleported player to '{0-island}'.'
nexel.commands.teleportToIsland.Success=
//TODO Translate [Reference] 'Close'
nexel.translation.tile.Close=
//TODO Translate [Reference] 'Locked'
nexel.translation.tile.Locked=
//TODO Translate [Reference] 'Open'
nexel.translation.tile.Open=
//TODO Translate [Reference] 'Pick Up'
nexel.translation.tile.Pick=
//TODO Translate [Reference] 'Use'
nexel.translation.tile.Use=
//TODO Translate [Reference] 'Continue Playing'
nexel.translation.ui.ContinuePlaying=
//TODO Translate [Reference] 'Main Menu'
nexel.translation.ui.MainMenu=
//TODO Translate [Reference] 'Options'
nexel.translation.ui.Options=
//TODO Translate [Reference] 'Return To Game'
nexel.translation.ui.ReturnToGame=
//TODO Translate [Reference] 'Place'
nexel.ui.buildersWand.Place=
//TODO Translate [Reference] 'Sphere'
nexel.ui.buildersWand.Sphere=
//TODO Translate [Reference] 'Tile'
nexel.ui.buildersWand.Tile=
//TODO Translate [Reference] 'CRAFT'
nexel.ui.crafting.Craft=
//TODO Translate [Reference] 'INGREDIENTS'
nexel.ui.crafting.Ingredients=
//TODO Translate [Reference] 'OUTPUT'
nexel.ui.crafting.Output=
//TODO Translate [Reference] '{0-itemCount}'
nexel.ui.CraftingNum=
//TODO Translate [Reference] 'You got killed by {1-attackName} from {0-entityName}.'
nexel.ui.DeathMessage=
//TODO Translate [Reference] 'You got killed by {0-attackName}.'
nexel.ui.DeathMessageNoEntity=
//TODO Translate [Reference] 'You got killed by an unknown source.'
nexel.ui.DeathMessageUnknown=
//TODO Translate [Reference] 'Respawn'
nexel.ui.DeathRespawn=
//TODO Translate [Reference] 'You have Died!'
nexel.ui.DeathTitle=
//TODO Translate [Reference] 'POPUP TEXT HERE'
nexel.ui.DefaultPopUpText=
//TODO Translate [Reference] '{0-desc}'
nexel.ui.DummyDesc=
//TODO Translate [Reference] '{0-modifierName} {1-itemName}'
nexel.ui.FullItemName=
//TODO Translate [Reference] '{2-itemCount}x {0-modifierName} {1-itemName}'
nexel.ui.FullItemNameStackable=
//TODO Translate [Reference] '{1-itemCount}x {0-itemName}'
nexel.ui.ItemNameStackable=
//TODO Translate [Reference] 'EXIT GAME'
nexel.ui.mainMenu.ExitGame=
//TODO Translate [Reference] 'MULTIPLAYER'
nexel.ui.mainMenu.Multiplayer=
//TODO Translate [Reference] 'Host Address'
nexel.ui.mainMenu.Multiplayer.hostAddress.title=
//TODO Translate [Reference] 'Address of the host game'
nexel.ui.mainMenu.Multiplayer.hostAddress.tooltip=
//TODO Translate [Reference] 'Password'
nexel.ui.mainMenu.Multiplayer.password.title=
//TODO Translate [Reference] 'Password of the host game'
nexel.ui.mainMenu.Multiplayer.password.tooltip=
//TODO Translate [Reference] 'OPTIONS'
nexel.ui.mainMenu.Options=
//TODO Translate [Reference] 'SINGLEPLAYER'
nexel.ui.mainMenu.Singleplayer=
//TODO Translate [Reference] 'Nothing to see here.'
nexel.ui.NothingToSee=
//TODO Translate [Reference] 'Controller Look Speed'
nexel.ui.option.base.ControllerLookSpeed=
//TODO Translate [Reference] 'Changes the look sensitivity of the right controller stick in game.'
nexel.ui.option.base.ControllerLookSpeedToolTip=
//TODO Translate [Reference] 'Fullscreen'
nexel.ui.option.base.Fullscreen=
//TODO Translate [Reference] 'Toggles Fullscreen'
nexel.ui.option.base.FullscreenToolTip=
//TODO Translate [Reference] 'Lowfi Mode'
nexel.ui.option.base.LowFi=
//TODO Translate [Reference] 'Changes a number of settings in the game to majorly increase performance.'
nexel.ui.option.base.LowFiToolTip=
//TODO Translate [Reference] 'Master Volume'
nexel.ui.option.base.MasterVolume=
//TODO Translate [Reference] 'Changes volume of all sounds.'
nexel.ui.option.base.MasterVolumeToolTip=
//TODO Translate [Reference] 'Mouse Sensitivity'
nexel.ui.option.base.MouseSensitivity=
//TODO Translate [Reference] 'Changes the look sensitivity of the mouse in game.'
nexel.ui.option.base.MouseSensitivityToolTip=
//TODO Translate [Reference] 'Music Volume'
nexel.ui.option.base.MusicVolume=
//TODO Translate [Reference] 'Changes volume of the music.'
nexel.ui.option.base.MusicVolumeToolTip=
//TODO Translate [Reference] 'UI Scale'
nexel.ui.option.base.UIScale=
//TODO Translate [Reference] 'Changes the relative size of the UI.'
nexel.ui.option.base.UIScaleToolTip=
//TODO Translate [Reference] 'Test'
nexel.ui.Test=
//TODO Translate [Reference] 'ACCESSORIES'
nexel.ui.title.Accessory=
//TODO Translate [Reference] 'AMMO'
nexel.ui.title.Ammo=
//TODO Translate [Reference] 'ARMOUR'
nexel.ui.title.Armor=
//TODO Translate [Reference] 'CRAFTING'
nexel.ui.title.Blueprints=
//TODO Translate [Reference] 'Builders Wand Settings'
nexel.ui.title.BuildersWand=
//TODO Translate [Reference] 'CRAFTING'
nexel.ui.title.Crafting=
//TODO Translate [Reference] 'CREATIVE'
nexel.ui.title.Creative=
//TODO Translate [Reference] 'ENCHANTER'
nexel.ui.title.Enchanter=
//TODO Translate [Reference] 'ERROR'
nexel.ui.title.Error=
//TODO Translate [Reference] 'FURNACE'
nexel.ui.title.Furnace=
//TODO Translate [Reference] 'HOTBAR'
nexel.ui.title.Hotbar=
//TODO Translate [Reference] 'INVENTORY'
nexel.ui.title.Inventory=
//TODO Translate [Reference] 'CONTROLS'
nexel.ui.title.options.Controls=
//TODO Translate [Reference] 'GENERAL'
nexel.ui.title.options.General=
//TODO Translate [Reference] 'GRAPHICS'
nexel.ui.title.options.Graphics=
//TODO Translate [Reference] 'INTERFACE'
nexel.ui.title.options.Interface=
//TODO Translate [Reference] 'LANGUAGE'
nexel.ui.title.options.Language=
//TODO Translate [Reference] 'OPTIONS'
nexel.ui.title.Options=
//TODO Translate [Reference] 'PAUSED'
nexel.ui.title.Pause=
//TODO Translate [Reference] 'TRASH'
nexel.ui.title.Trash=
//TODO Translate [Reference] 'TRIGGER'
nexel.ui.title.Trigger=
//TODO Translate [Reference] '{0-number} damage'
nexel.ui.toolTip.accessory.DamageUp=
//TODO Translate [Reference] '{0-number} jumps'
nexel.ui.toolTip.accessory.JumpUp=
//TODO Translate [Reference] '{0-number} movespeed'
nexel.ui.toolTip.accessory.MoveSpeedUp=
//TODO Translate [Reference] '{0-number} defense'
nexel.ui.toolTip.armor=
//TODO Translate [Reference] 'Restores {0-life} health'
nexel.ui.toolTip.healthRestore=
//TODO Translate [Reference] 'Restores {0-mana} mana'
nexel.ui.toolTip.manaRestore=
//TODO Translate [Reference] 'Increases health by {0-life}'
nexel.ui.toolTip.maxHealthUp=
//TODO Translate [Reference] 'Increases mana by {0-mana}'
nexel.ui.toolTip.maxManaUp=
//TODO Translate [Reference] '{0-number} melee damage'
nexel.ui.toolTip.meleeDamage=
//TODO Translate [Reference] '{0-number} ranged damage'
nexel.ui.toolTip.rangedDamage=
//TODO Translate [Reference] 'Accessory'
nexel.ui.toolTip.type.Accessory=
//TODO Translate [Reference] 'Consumable'
nexel.ui.toolTip.type.Consumable=
//TODO Translate [Reference] 'Helmet'
nexel.ui.toolTip.type.Helmet=
//TODO Translate [Reference] 'Leggings'
nexel.ui.toolTip.type.Leggings=
//TODO Translate [Reference] 'Torso'
nexel.ui.toolTip.type.Torso=
//TODO Translate [Reference] 'Usable'
nexel.ui.toolTip.type.Usable=
//TODO Translate [Reference] 'Look Sensitivity'
options.controls.LookThumbstickSensitivity=
//TODO Translate [Reference] 'Control Scheme'
options.controls.ui.controlScheme=
//TODO Translate [Reference] 'Name Tag Scale'
options.gameplay.ui.NameTagScale=
//TODO Translate [Reference] 'UI Outer Margin'
options.gameplay.ui.SafetyMargin=
//TODO Translate [Reference] 'Menus'
options.general.audio.ui=
//TODO Translate [Reference] 'Controller Vibration Strength'
options.general.RumbleStrength=
//TODO Translate [Reference] 'Any Group'
recipeBook.grouping.NoGrouping=
//[Reference] 'Accessory'
staxel.category.Accessory=Aksesuarlar
//TODO Translate [Reference] 'Airship'
staxel.category.airship=
//TODO Translate [Reference] 'Bald'
staxel.category.bald=
//TODO Translate [Reference] 'Base'
staxel.category.base=
//TODO Translate [Reference] 'Blocks'
staxel.category.blocks=
//TODO Translate [Reference] 'Blueprint'
staxel.category.blueprint=
//TODO Translate [Reference] 'Brooch'
staxel.category.brooch=
//TODO Translate [Reference] 'Cell'
staxel.category.cell=
//TODO Translate [Reference] 'Challenge'
staxel.category.challenge=
//TODO Translate [Reference] 'Conjure'
staxel.category.conjure=
//TODO Translate [Reference] 'Conjuring'
staxel.category.conjuring=
//TODO Translate [Reference] 'Contract'
staxel.category.contract=
//TODO Translate [Reference] 'Currency'
staxel.category.currency=
//TODO Translate [Reference] 'Defaced Oscar Quest Campaign Sign'
staxel.category.defacedOscarQuestCampaignSign=
//TODO Translate [Reference] 'Deliverable'
staxel.category.deliverable=
//TODO Translate [Reference] 'Demon King'
staxel.category.demonking=
//TODO Translate [Reference] 'Document'
staxel.category.document=
//TODO Translate [Reference] 'Eyes'
staxel.category.Eyes=
//TODO Translate [Reference] 'Fail'
staxel.category.fail=
//TODO Translate [Reference] 'Farmed'
staxel.category.farmed=
//TODO Translate [Reference] 'Firework'
staxel.category.firework=
//TODO Translate [Reference] 'Game Bug 1'
staxel.category.gameBug1=
//TODO Translate [Reference] 'Game Bug 2'
staxel.category.gameBug2=
//TODO Translate [Reference] 'Game Bug 3'
staxel.category.gameBug3=
//TODO Translate [Reference] 'Game Bug 4'
staxel.category.gameBug4=
//TODO Translate [Reference] 'Giant Mushroom'
staxel.category.giantMushroom=
//TODO Translate [Reference] 'Golden'
staxel.category.golden=
//TODO Translate [Reference] 'Hair'
staxel.category.Hair=
//[Reference] 'Hat'
staxel.category.Hat=Şapka
//TODO Translate [Reference] 'Inner Roof'
staxel.category.inner roof=
//TODO Translate [Reference] 'Insurance'
staxel.category.insurance=
//TODO Translate [Reference] 'Legendary'
staxel.category.legendary=
//TODO Translate [Reference] 'Long Sleeve'
staxel.category.longsleeve=
//TODO Translate [Reference] 'Loseable'
staxel.category.loseable=
//TODO Translate [Reference] 'Material'
staxel.category.material=
//TODO Translate [Reference] 'Medicine'
staxel.category.medicine=
//TODO Translate [Reference] 'Medium'
staxel.category.medium=
//TODO Translate [Reference] 'Long Sleeve'
staxel.category.monkey=
//TODO Translate [Reference] 'Monster'
staxel.category.monster=
//TODO Translate [Reference] 'Morel Best Friend Mushroom A'
staxel.category.morelBestFriendMushroomA=
//TODO Translate [Reference] 'Morel Best Friend Mushroom B'
staxel.category.morelBestFriendMushroomB=
//TODO Translate [Reference] 'Note'
staxel.category.note=
//TODO Translate [Reference] 'Oscar Quest Campaign Sign'
staxel.category.oscarQuestCampaignSign=
//TODO Translate [Reference] 'Oscar Quest Trash Large'
staxel.category.oscarQuestTrashLarge=
//TODO Translate [Reference] 'Outer Roof'
staxel.category.outer roof=
//TODO Translate [Reference] 'Package'
staxel.category.package=
//TODO Translate [Reference] 'Pancake'
staxel.category.pancake=
//TODO Translate [Reference] 'Part'
staxel.category.part=
//TODO Translate [Reference] 'Parts'
staxel.category.parts=
//TODO Translate [Reference] 'Pearl'
staxel.category.pearl=
//TODO Translate [Reference] 'Permit'
staxel.category.permit=
//TODO Translate [Reference] 'Phone'
staxel.category.phone=
//TODO Translate [Reference] 'Photograph'
staxel.category.photograph=
//TODO Translate [Reference] 'Pond'
staxel.category.pond=
//TODO Translate [Reference] 'Ring'
staxel.category.ring=
//TODO Translate [Reference] 'Robot'
staxel.category.robot=
//TODO Translate [Reference] 'Sandals'
staxel.category.sandals=
//TODO Translate [Reference] 'Sapper'
staxel.category.sapper=
//TODO Translate [Reference] 'Screen'
staxel.category.screen=
//[Reference] 'Shirt'
staxel.category.Shirt=T-shirt
//TODO Translate [Reference] 'Shoe'
staxel.category.shoe=
//[Reference] 'Shoes'
staxel.category.Shoes=Ayakkabı
//TODO Translate [Reference] 'Sock'
staxel.category.sock=
//TODO Translate [Reference] 'Socks'
staxel.category.socks=
//TODO Translate [Reference] 'Stem'
staxel.category.stem=
//TODO Translate [Reference] 'Token'
staxel.category.token=
//TODO Translate [Reference] 'Tools'
staxel.category.tools=
//TODO Translate [Reference] 'Treetop Thingamabob'
staxel.category.treeTopThingamabob=
//TODO Translate [Reference] 'Tropical Flower'
staxel.category.tropicalflower=
//[Reference] 'Trousers'
staxel.category.Trousers=Pantolon
//TODO Translate [Reference] 'Tutorial Red Cricket'
staxel.category.tutorialRedCricket=
//TODO Translate [Reference] 'Upside Down Inner Roof'
staxel.category.upside down inner roof=
//TODO Translate [Reference] 'Upside Down Outer Roof'
staxel.category.upside down outer roof=
//TODO Translate [Reference] 'Villager Item'
staxel.category.villagerItem=
//TODO Translate [Reference] 'VoxelBoy'
staxel.category.voxelboy=
//TODO Translate [Reference] 'Wagon'
staxel.category.wagon=
//TODO Translate [Reference] 'Witch'
staxel.category.witch=
//TODO Translate [Reference] 'Caith'
staxel.character.species.Caith=
//TODO Translate [Reference] 'Elf'
staxel.character.species.Elf=
//TODO Translate [Reference] 'Human'
staxel.character.species.Human=
//TODO Translate [Reference] '{0-season} {1-date}'
staxel.clock.Date=
//TODO Translate [Reference] 'Pheasant'
staxel.collector.farmAnimal.Pheasant=
//TODO Translate [Reference] 'Duck'
staxel.collector.farmAnimals.Duck=
//TODO Translate [Reference] 'Fox'
staxel.collector.pets.Fox=
//TODO Translate [Reference] 'Hedgehog'
staxel.collector.pets.Hedgehog=
//TODO Translate [Reference] 'Parrot'
staxel.collector.pets.Parrot=
//TODO Translate [Reference] 'Penguin'
staxel.collector.pets.Penguin=
//TODO Translate [Reference] 'Tortoise'
staxel.collector.pets.Tortoise=
//TODO Translate [Reference] 'Unicorn Kitty'
staxel.collector.pets.UnicornKitty=
//TODO Translate [Reference] 'Not enough parameters. Needs parameter: 'statusEffect'.'
staxel.commands.addStatusEffect.NotEnoughParameters=
//TODO Translate [Reference] 'Successfully added the status effect '{0-effect}''
staxel.commands.addStatusEffect.Success=
//TODO Translate [Reference] 'Not enough parameters. Needs parameter: 'itemCode'.'
staxel.commands.checkCollected.NotEnoughParameters=
//TODO Translate [Reference] 'Item {0-itemCode} collection status is: '{1-status}'.'
staxel.commands.checkCollected.Success=
//TODO Translate [Reference] 'Invalid arguments. Must be: \n [recipient] [subject] [body] [petals]'
staxel.commands.createMail.Invalid=
//TODO Translate [Reference] 'Couldn't find a mail recipient with that name.'
staxel.commands.createMail.NoUser=
//TODO Translate [Reference] 'Mail created successfully!'
staxel.commands.createMail.Success=
//TODO Translate [Reference] 'Cheating has not been enabled. Cannot change Creative Mode.'
staxel.commands.creative.CheatsNotActive=
//TODO Translate [Reference] 'Set Creative to {0-bool}.'
staxel.commands.creative.Success=
//TODO Translate [Reference] 'Player is holding '{0-itemCode}'. Its modifier is '{1-modifier}' and has a stack count of '{2-stackCount}'.'
staxel.commands.describeItem.Success=
//TODO Translate [Reference] 'Not enough parameters. Needs parameter: 'itemCode'.'
staxel.commands.doNotification.NotEnoughParameters=
//TODO Translate [Reference] 'Showing notification '{0-code}'.'
staxel.commands.doNotification.Success=
//TODO Translate [Reference] 'Set Cheats to {0-bool}.'
staxel.commands.enableCheats.Success=
//TODO Translate [Reference] 'Requesting connection does not have an entity that has EntityPlayer'
staxel.commands.error.ConnectionNoPlayer=
//TODO Translate [Reference] 'Set flying to {0-bool}.'
staxel.commands.fly.Success=
//TODO Translate [Reference] 'Unable to execute {0-commandName}. Got exception: {1-exceptionText}'
staxel.commands.generic.Exception=
//TODO Translate [Reference] 'Failed to parse parameter {0-paramNumber} as a bool. Parameter was: {1-input}.'
staxel.commands.generic.FailedBoolConvert=
//TODO Translate [Reference] 'Failed to parse parameter {0-paramNumber} as a colour string. Parameter was: {1-input}.'
staxel.commands.generic.FailedColorConvert=
//TODO Translate [Reference] 'Failed to parse parameter {0-paramNumber} as a valid parameter. Parameter was: {1-input}. Valid Answers: {2-multipleAnswers}'
staxel.commands.generic.FailedEnumConvert=
//TODO Translate [Reference] 'Failed to parse parameter {0-paramNumber} as a float. Parameter was: {1-input}.'
staxel.commands.generic.FailedFloatConvert=
//TODO Translate [Reference] 'Failed to parse parameter {0-paramNumber} as an integer. Parameter was: {1-input}.'
staxel.commands.generic.FailedIntConvert=
//TODO Translate [Reference] 'Failed to find an item with the code: '{0-input}'. Did you mean: '{1-suggestion}.''
staxel.commands.generic.FailedToFindItem=
//TODO Translate [Reference] 'Failed to find an modifier with the code: '{0-input}'. Did you mean: '{1-suggestion}.''
staxel.commands.generic.FailedToFindModifier=
//TODO Translate [Reference] 'Failed to find an villager with the code: '{0-input}'. Did you mean: '{1-suggestion}.''
staxel.commands.generic.FailedToFindVillager=
//TODO Translate [Reference] 'Not enough parameters.'
staxel.commands.generic.NotEnoughParameters=
//TODO Translate [Reference] 'Success.'
staxel.commands.generic.Success=
//TODO Translate [Reference] 'The value of {0-globalName} is {1-globalValue}'
staxel.commands.getConstant.Success=
//TODO Translate [Reference] 'Position: {0-position}. Heading: {1-heading}.'
staxel.commands.getPosition.Success=
//TODO Translate [Reference] 'The pricing of stack {0-stack} is: Buy: {1-buyPrice}, Sell: {2-sellPrice}.'
staxel.commands.getPricing.Success=
//TODO Translate [Reference] 'Not enough parameters. Needs parameter: 'itemCode'. Optionally includes: 'itemCount'.'
staxel.commands.giveItem.NotEnoughParameters=
//TODO Translate [Reference] 'Gave player {0-number} of '{1-itemCode}'.'
staxel.commands.giveItem.Success=
//TODO Translate [Reference] 'Failed to find loot with code: '{0-input}'. Did you mean: '{1-suggestion}'?'
staxel.commands.giveLoot.FailedToFind=
//TODO Translate [Reference] 'Not enough parameters, needs parameter: 'lootCode''
staxel.commands.giveLoot.NotEnoughParameters=
//TODO Translate [Reference] 'Gave player items from '{0-loot}'.'
staxel.commands.giveLoot.Success=
//TODO Translate [Reference] 'Not enough parameters. Needs parameter: 'entityType'.'
staxel.commands.kill.NotEnoughParameters=
//TODO Translate [Reference] 'Killed {0-number} {1-entityType}.'
staxel.commands.kill.Success=
//TODO Translate [Reference] 'Unknown entity type: '{0-input}'.'
staxel.commands.kill.UnknownEntityType=
//TODO Translate [Reference] 'No recipe found with given code'
staxel.commands.learnRecipe.NoSuchRecipe=
//TODO Translate [Reference] 'No recipe code specified'
staxel.commands.learnRecipe.NotEnoughParameters=
//TODO Translate [Reference] 'Learned Recipe: {0-recipeCode}'
staxel.commands.learnRecipe.Success=
//TODO Translate [Reference] 'Pong. (Server)'
staxel.commands.ping.Success=
//TODO Translate [Reference] 'Pong. (Client)'
staxel.commands.pingClient.Success=
//TODO Translate [Reference] 'Change the number of sales on {0-stack} from {1-before} to {2-after}.'
staxel.commands.registerSale.Success=
//TODO Translate [Reference] 'Unknown dialogue command '{0-code}'.'
staxel.commands.runDialogue.CommandDoesNotExist=
//TODO Translate [Reference] 'Not enough parameters, needs parameters: 'speakerVillagerCode' 'dialogueCommandCode'. Optionally includes: 'dialogueCommandArguments'.'
staxel.commands.runDialogue.NotEnoughParameters=
//TODO Translate [Reference] 'Dialogue command '{0-code}' successfully started.'
staxel.commands.runDialogue.Success=
//TODO Translate [Reference] 'Not enough parameters, needs parameters: 'villagerCode' 'villagerScriptCode'.'
staxel.commands.runScript.NotEnoughParameters=
//TODO Translate [Reference] 'Unknown villager script '{0-code}'.'
staxel.commands.runScript.ScriptDoesNotExist=
//TODO Translate [Reference] 'Villager script '{0-code}' successfully started.'
staxel.commands.runScript.Success=
//TODO Translate [Reference] 'Save successfully requested.'
staxel.commands.saveWorld.Success=
//TODO Translate [Reference] 'Invalid arguments. Can be: \n [recipient (optional)] [mail code] \n [recipient (optional)] [subject] [body] [petals]'
staxel.commands.sendMail.Invalid=
//TODO Translate [Reference] 'No mail definition found with code: '{0-mailCode}''
staxel.commands.sendMail.NoMailCode=
//TODO Translate [Reference] 'No player found: '{0-player}''
staxel.commands.sendMail.NoPlayer=
//TODO Translate [Reference] 'Mail sent successfully!'
staxel.commands.sendMail.Success=
//TODO Translate [Reference] 'Failed to find an constant with the code: '{0-input}'. Did you mean '{1-suggestion}''
staxel.commands.setConstant.FailedToFind=
//TODO Translate [Reference] 'Not enough parameters. Needs parameter: 'name'.'
staxel.commands.setConstant.NotEnoughParameters=
//TODO Translate [Reference] 'Not enough parameters to set '{0-constantName}'. Needs 'string' or 'int (0-255), int (0-255), int (0-255), (opt)int (0-255)' (Note: string is argb, int is rgba).'
staxel.commands.setConstant.NotEnoughParametersColor=
//TODO Translate [Reference] 'Not enough parameters to set '{0-constantName}'. Needs 'float'.'
staxel.commands.setConstant.NotEnoughParametersFloat=
//TODO Translate [Reference] 'Not enough parameters to set '{0-constantName}'. Needs 'int'.'
staxel.commands.setConstant.NotEnoughParametersInt=
//TODO Translate [Reference] 'Not enough parameters to set '{0-constantName}'. Needs 'string'.'
staxel.commands.setConstant.NotEnoughParametersString=
//TODO Translate [Reference] 'Not enough parameters to set '{0-constantName}'. Needs 'float, float'.'
staxel.commands.setConstant.NotEnoughParametersVector2F=
//TODO Translate [Reference] 'Not enough parameters to set '{0-constantName}'. Needs 'int, int'.'
staxel.commands.setConstant.NotEnoughParametersVector2I=
//TODO Translate [Reference] 'Not enough parameters to set '{0-constantName}'. Needs 'float, float, float'.'
staxel.commands.setConstant.NotEnoughParametersVector3F=
//TODO Translate [Reference] 'Not enough parameters to set '{0-constantName}'. Needs 'int, int, int'.'
staxel.commands.setConstant.NotEnoughParametersVector3I=
//TODO Translate [Reference] 'Not enough parameters to set '{0-constantName}'. Needs 'float, float, float, float'.'
staxel.commands.setConstant.NotEnoughParametersVector4F=
//TODO Translate [Reference] 'Unable to set constant: '{0-constantName}'. Constant is not of a static type.'
staxel.commands.setConstant.NotStatic=
//TODO Translate [Reference] 'Unable to set constant: '{0-constantName}'. No valid input for type: '{1-constantType}'.'
staxel.commands.setConstant.NoValidType=
//TODO Translate [Reference] 'Successfully set contant: '{0-constantName}' to '{1-input}'.'
staxel.commands.setConstant.Success=
//TODO Translate [Reference] 'Not enough parameters. Needs parameter: 'globalDialogueName', 'value' or 'villagerVariableName', 'villagerCode', 'value'.'
staxel.commands.setDialogue.NotEnoughParameters=
//TODO Translate [Reference] 'Not enough parameters for changing villager parameter. Needs parameter: 'villagerVariableName', 'villagerCode', 'value'.'
staxel.commands.setDialogue.NotEnoughParametersVillager=
//TODO Translate [Reference] 'Successfully change the value '{0-input}' from '{1-prevValue}' to '{2-newValue}''
staxel.commands.setDialogue.Success=
//TODO Translate [Reference] 'The first parameter must be a dialogue variable (i.e. starts with $). Was: '{0-input}''
staxel.commands.setDialogue.ValueNotVariable=
//TODO Translate [Reference] 'Successfully set the global '{0-globalName}' to {1-globalValue}.'
staxel.commands.setGlobal.Success=
//TODO Translate [Reference] 'Set home to island: {0-island}. Position is: {1-position}.'
staxel.commands.setHome.Success=
//TODO Translate [Reference] 'Failed to set pinned recipe.'
staxel.commands.setPinnedRecipe.Fail=
//TODO Translate [Reference] 'Pinned Recipe has been set.'
staxel.commands.setPinnedRecipe.Success=
//TODO Translate [Reference] 'Failed to find an effect with the code: '{0-input}'. Did you mean: '{1-suggestion}.''
staxel.commands.spawnEffect.FailedToFind=
//TODO Translate [Reference] 'Not enough parameters. Needs parameter: 'effectCode'. Optionally includes: 'attachToPlayer'.'
staxel.commands.spawnEffect.NotEnoughParameters=
//TODO Translate [Reference] 'Spawned the effect '{0-effectCode}''
staxel.commands.spawnEffect.Success=
//TODO Translate [Reference] 'Parameter should be a number'
staxel.commands.spawnStarBits.InvalidCount=
//TODO Translate [Reference] 'Successfully spawned {0-count} starbits'
staxel.commands.spawnStarBits.Success=
//TODO Translate [Reference] 'Not enough parameters. Needs parameter: 'villagerCode'. Optionally includes: 'bypassRestrictions''
staxel.commands.spawnVillager.NotEnoughParameters=
//TODO Translate [Reference] 'Spawned the villager '{0-villagerCode}''
staxel.commands.spawnVillager.Success=
//TODO Translate [Reference] 'Requested villager already exists on this island.''
staxel.commands.spawnVillager.VillagerAlreadyExists=
//TODO Translate [Reference] 'Invalid structure code.'
staxel.commands.stampStructure.InvalidStructure=
//TODO Translate [Reference] 'Not enough parameters. Needs parameter: 'overlayCode'. Optionally includes: 'state'.'
staxel.commands.swapOverlay.NotEnoughParameters=
//TODO Translate [Reference] 'Showing overlay '{0-code}'.'
staxel.commands.swapOverlay.Success=
//TODO Translate [Reference] 'Failed to read tile at position {0-position}.'
staxel.commands.tileAt.Fail=
//TODO Translate [Reference] 'Not looking at a tile.'
staxel.commands.tileAt.NotLookingAtTile=
//TODO Translate [Reference] 'Tile at position {0-position} is {1-tile}. Alt is {2-alt}. Meta is {3-meta}'
staxel.commands.tileAt.Success=
//TODO Translate [Reference] 'Tile at position {0-position} with metadata {1-meta} is a compound tile. The core is at: {2-corePosition}, which is a '{3-tile}'. Its Alt is {4-alt}. The meta is {5-meta}.'
staxel.commands.tileAt.SuccessCompound=
//TODO Translate [Reference] 'Failed to find command with key: '{0-input}'. Did you mean: '{1-suggestion}'?'
staxel.commands.UnableToFindCommand=
//TODO Translate [Reference] 'Unknown achievement code: {0-achievement}'
staxel.commands.uncompleteAchievement.NoCode=
//TODO Translate [Reference] 'Achievement {0-achievement} reset successfully.'
staxel.commands.uncompleteAchievement.Success=
//TODO Translate [Reference] 'Local Communication'
staxel.communicationMode.Local=
//TODO Translate [Reference] 'Online Communication'
staxel.communicationMode.Online=
//TODO Translate [Reference] 'Could not connect to player.\n\nYou are already connected to the server.'
staxel.connection.AlreadyConnected=
//TODO Translate [Reference] 'Disconnected from player.\n\nConnection was lost to the server. Please ensure you are connected to the internet before trying again.'
staxel.connection.ConnectionLost=
//TODO Translate [Reference] 'Could not connect to player.\n\nEntry to server was denied.'
staxel.connection.EntryDenied=
//TODO Translate [Reference] 'Failed to connect to player.\n\nPlease ensure you are connected to the internet before trying again.'
staxel.connection.FailedToConnect=
//TODO Translate [Reference] 'Failed to connect to player.\n\nMake sure you have entered the right address and that you are connected to the internet before trying again.'
staxel.connection.FailedToConnectPC=
//TODO Translate [Reference] 'Could not connect to player.\n\nAccess was denied as the entered password was wrong.'
staxel.connection.InvalidPassword=
//TODO Translate [Reference] 'Could not connect to player.\n\nAn error occured while trying to communicate with server. If problems persist, please restart the game.'
staxel.connection.ProtocolError=
//TODO Translate [Reference] 'Could not connect to player.\n\nThere was a version Mismatch. Your version of this game does not match that of the server's. Please exit and update your game.'
staxel.connection.VersionMismatch=
//TODO Translate [Reference] 'Catalogue'
staxel.contextButton.catalogue.Catalogue=
//TODO Translate [Reference] 'Orders'
staxel.contextButton.catalogue.Orders=
//TODO Translate [Reference] 'Next Category'
staxel.contextButton.category.Next=
//TODO Translate [Reference] 'Previous Category'
staxel.contextButton.category.Prev=
//TODO Translate [Reference] 'Write Message'
staxel.contextButton.chat.Write=
//TODO Translate [Reference] 'Close'
staxel.contextButton.Close=
//TODO Translate [Reference] 'Trash Stack'
staxel.contextButton.creativeInventory.TrashStack=
//TODO Translate [Reference] 'Rush'
staxel.contextButton.dialogue.FinishBox=
//TODO Translate [Reference] 'Continue'
staxel.contextButton.dialogue.Next=
//TODO Translate [Reference] 'Select'
staxel.contextButton.dialogue.SelectOption=
//TODO Translate [Reference] 'Pick Stack'
staxel.contextButton.inventory.Pick=
//TODO Translate [Reference] 'Pick Half Stack'
staxel.contextButton.inventory.PickHalf=
//TODO Translate [Reference] 'Pick One'
staxel.contextButton.inventory.PickOne=
//TODO Translate [Reference] 'Put Stack'
staxel.contextButton.inventory.Put=
//TODO Translate [Reference] 'Put One'
staxel.contextButton.inventory.PutOne=
//TODO Translate [Reference] 'Swap Stack'
staxel.contextButton.inventory.Swap=
//TODO Translate [Reference] 'Next Page'
staxel.contextButton.page.Next=
//TODO Translate [Reference] 'Previous Page'
staxel.contextButton.page.Prev=
//TODO Translate [Reference] 'Pin Recipe'
staxel.contextButton.recipe.Pin=
//TODO Translate [Reference] 'Previous Recipe'
staxel.contextButton.recipe.PreviousRecipe=
//TODO Translate [Reference] 'Unpin Recipe'
staxel.contextButton.recipe.Unpin=
//TODO Translate [Reference] 'Start Automation'
staxel.controlHint.StartAutomation=
//TODO Translate [Reference] 'Stop Automation'
staxel.controlHint.StopAutomation=
//TODO Translate [Reference] 'Docks'
staxel.controlHints.section.Docks=
//TODO Translate [Reference] 'Gameplay'
staxel.controlHints.section.Gameplay=
//TODO Translate [Reference] 'Inventory'
staxel.controlHints.section.Inventory=
//TODO Translate [Reference] 'Menus'
staxel.controlHints.section.Menus=
//TODO Translate [Reference] 'in {0-growTime} days during Doesn't grow in any seasons. Please report this as a bug.'
staxel.description.GrowTimeDays.0=
//TODO Translate [Reference] 'in {0-growTime} days during {1-season}'
staxel.description.GrowTimeDays.1=
//TODO Translate [Reference] 'in {0-growTime} days during {1-season} and {2-season}'
staxel.description.GrowTimeDays.2=
//TODO Translate [Reference] 'in {0-growTime} days during {1-season}, {2-season}, and {3-season}'
staxel.description.GrowTimeDays.3=
//TODO Translate [Reference] 'in {0-growTime} days during all seasons'
staxel.description.GrowTimeDays.4=
//TODO Translate [Reference] 'in {0-growTimeMin} to {1-growTimeMax} days'
staxel.description.GrowTimeDaysRange=
//TODO Translate [Reference] 'in {0-growTimeMin} to {1-growTimeMax} days during Doesn't grow in any seasons. Please report this as a bug.'
staxel.description.GrowTimeDaysRange.0=
//TODO Translate [Reference] 'in {0-growTimeMin} to {1-growTimeMax} days during {2-season}'
staxel.description.GrowTimeDaysRange.1=
//TODO Translate [Reference] 'in {0-growTimeMin} to {1-growTimeMax} days during {2-season} and {3-season}'
staxel.description.GrowTimeDaysRange.2=
//TODO Translate [Reference] 'in {0-growTimeMin} to {1-growTimeMax} days during {2-season}, {3-season}, and {4-season}'
staxel.description.GrowTimeDaysRange.3=
//TODO Translate [Reference] 'in {0-growTimeMin} to {1-growTimeMax} days during all seasons'
staxel.description.GrowTimeDaysRange.4=
//TODO Translate [Reference] 'Grows {0-growTime} then regrows {1-reGrowTime}.'
staxel.description.GrowTimeRegrowValidSeasons=
//TODO Translate [Reference] 'This island can't love any more farm animals.'
staxel.description.MaxFarmAnimalsReached=
//TODO Translate [Reference] 'This island can't love any more pets.'
staxel.description.MaxPetsReached=
//TODO Translate [Reference] '{0-description} {1-growthtime}'
staxel.description.PlantGrowth=
//TODO Translate [Reference] '{0-money}'
staxel.docks.SellboxNameTag=
//TODO Translate [Reference] 'One or more save files were corrupted.'
staxel.error.storage.CorruptedFile=
//TODO Translate [Reference] 'One or more save files are being used by another program.'
staxel.error.storage.FileInUse=
//TODO Translate [Reference] 'One or more save files were too large.'
staxel.error.storage.FileTooLarge=
//TODO Translate [Reference] 'One or more save files could not be saved as there is no space left.'
staxel.error.storage.NoSpace=
//TODO Translate [Reference] 'Unknown save error.'
staxel.error.storage.Unknown=
//TODO Translate [Reference] 'Rooster'
staxel.farmAnimal.Rooster=
//TODO Translate [Reference] 'Camera Mode'
staxel.gameButton.CameraMode=
//TODO Translate [Reference] 'Hide Player Model'
staxel.gameButton.CameraModePlayerOnly=
//TODO Translate [Reference] 'Pick Block'
staxel.gameButton.CreativePick=
//TODO Translate [Reference] 'Exit Dock'
staxel.gameButton.DockExit=
//TODO Translate [Reference] 'Quantity Modifier'
staxel.gameButton.DockModifier=
//TODO Translate [Reference] 'Put Item'
staxel.gameButton.DockPut=
//TODO Translate [Reference] 'Rotate Item Left'
staxel.gameButton.DockRotateLeft=
//TODO Translate [Reference] 'Rotate Item Right'
staxel.gameButton.DockRotateRight=
//TODO Translate [Reference] 'Take Item'
staxel.gameButton.DockTake=
//TODO Translate [Reference] 'Drop Item'
staxel.gameButton.DropHeldItem=
//TODO Translate [Reference] 'Interact'
staxel.gameButton.Interact=
//TODO Translate [Reference] 'Drop Held Stack'
staxel.gameButton.InvDropHeldStack=
//TODO Translate [Reference] 'Pick/Place Stack'
staxel.gameButton.InvPickPlace=
//TODO Translate [Reference] 'Pick/Place Half Stack'
staxel.gameButton.InvPickPlaceHalf=
//TODO Translate [Reference] 'Pick/Place One'
staxel.gameButton.InvPickPlaceOne=
//TODO Translate [Reference] 'Jump'
staxel.gameButton.Jump=
//TODO Translate [Reference] 'Look Down'
staxel.gameButton.LookDown=
//TODO Translate [Reference] 'Look Left'
staxel.gameButton.LookLeft=
//TODO Translate [Reference] 'Look Right'
staxel.gameButton.LookRight=
//TODO Translate [Reference] 'Look Up'
staxel.gameButton.LookUp=
//TODO Translate [Reference] 'Back'
staxel.gameButton.MenuBack=
//TODO Translate [Reference] 'Cancel'
staxel.gameButton.MenuCancel=
//TODO Translate [Reference] 'Accept'
staxel.gameButton.MenuControllerAccept=
//TODO Translate [Reference] 'Accept (Alt)'
staxel.gameButton.MenuControllerAcceptAlt=
//TODO Translate [Reference] 'Delete'
staxel.gameButton.MenuDelete=
//TODO Translate [Reference] 'End'
staxel.gameButton.MenuEnd=
//TODO Translate [Reference] 'Extra Action 1'
staxel.gameButton.MenuExtraAction1=
//TODO Translate [Reference] 'Extra Action 2'
staxel.gameButton.MenuExtraAction2=
//TODO Translate [Reference] 'Home'
staxel.gameButton.MenuHome=
//TODO Translate [Reference] 'Accept'
staxel.gameButton.MenuMouseAccept=
//TODO Translate [Reference] 'Accept (Alt)'
staxel.gameButton.MenuMouseAcceptAlt=
//TODO Translate [Reference] 'Navigate Down'
staxel.gameButton.MenuNavDown=
//TODO Translate [Reference] 'Navigate Left'
staxel.gameButton.MenuNavLeft=
//TODO Translate [Reference] 'Navigate Right'
staxel.gameButton.MenuNavRight=
//TODO Translate [Reference] 'Navigate Up'
staxel.gameButton.MenuNavUp=
//TODO Translate [Reference] 'Next Section'
staxel.gameButton.MenuNextSection=
//TODO Translate [Reference] 'Next Sub-Section'
staxel.gameButton.MenuNextSubSection=
//TODO Translate [Reference] 'Previous Section'
staxel.gameButton.MenuPrevSection=
//TODO Translate [Reference] 'Previous Sub-Section'
staxel.gameButton.MenuPrevSubSection=
//TODO Translate [Reference] 'Move Backward'
staxel.gameButton.MoveBackward=
//TODO Translate [Reference] 'Move Forward'
staxel.gameButton.MoveForward=
//TODO Translate [Reference] 'Move Left'
staxel.gameButton.MoveLeft=
//TODO Translate [Reference] 'Move Right'
staxel.gameButton.MoveRight=
//TODO Translate [Reference] 'Next Item'
staxel.gameButton.NextItem=
//TODO Translate [Reference] 'Pause'
staxel.gameButton.Pause=
//TODO Translate [Reference] 'Rotate Block Left'
staxel.gameButton.PlaceRotateLeft=
//TODO Translate [Reference] 'Rotate Block Right'
staxel.gameButton.PlaceRotateRight=
//TODO Translate [Reference] 'Previous Item'
staxel.gameButton.PrevItem=
//TODO Translate [Reference] 'Show Chat'
staxel.gameButton.ShowChat=
//TODO Translate [Reference] 'Show Inventory'
staxel.gameButton.ShowInventory=
//TODO Translate [Reference] 'Show Journal'
staxel.gameButton.ShowJournal=
//TODO Translate [Reference] 'Player List'
staxel.gameButton.ShowPlayerList=
//TODO Translate [Reference] 'Sneak'
staxel.gameButton.Sneak=
//TODO Translate [Reference] 'Sprint'
staxel.gameButton.Sprint=
//TODO Translate [Reference] 'Toggle Map'
staxel.gameButton.ToggleMap=
//TODO Translate [Reference] 'Use'
staxel.gameButton.Use=
//TODO Translate [Reference] 'Not looking at an animal.'
staxel.generic.NotLookingAtAnimal=
//TODO Translate [Reference] 'You do not own this animal.'
staxel.generic.NotLookingAtOwnedAnimal=
//TODO Translate [Reference] 'Not looking at a tile.'
staxel.generic.NotLookingAtTile=
//TODO Translate [Reference] 'Can't capture this animal with a crate.'
staxel.item.captureCrate.CantCaptureAnimal=
staxel.item.crafting.CakeBatter.description=
//[Validate] Delete this comment if or when the translation is accurate.
//[Reference] 'Raw Cake Batter'
staxel.item.crafting.CakeBatter.name=Kek Hamuru
staxel.item.crafting.CakePlainBatter.description=Sade bir kek
//[Validate] Delete this comment if or when the translation is accurate.
//[Reference] 'Plain Cake Batter'
staxel.item.crafting.CakePlainBatter.name=Kek Hamuru
//TODO Translate [Reference] 'Tile is already fully grown.'
staxel.item.magicWater.FullyGrown=
//TODO Translate [Reference] 'Tile is not a plant.'
staxel.item.magicWater.NotAPlant=
//TODO Translate [Reference] 'Plant is too healthy. Manure is not needed.'
staxel.item.magicWater.NotWilted=
//TODO Translate [Reference] 'Not looking at an apirary.'
staxel.item.smoker.NotApiary=
//[Validate] Delete this comment if or when the translation is accurate.
//[Reference] 'Renamer'
staxel.item.tool.Renamer.name=İsimlendirme Formu
//TODO Translate [Reference] 'Enter a new name'
staxel.item.tool.Renamer.tooltip=
//TODO Translate [Reference] 'This plant can't be broken using a weed killer.'
staxel.item.weedKiller.IsPlant=
//TODO Translate [Reference] 'Failed to read letter. Malformed data.'
staxel.mail.FailedToRead=
//TODO Translate [Reference] 'Cannot edit this item. It is not a letter!'
staxel.mail.ItemNotMail=
//TODO Translate [Reference] 'Mail: "{0-mailSubject}"'
staxel.mail.NameTranslation=
//TODO Translate [Reference] 'Are you sure you want to delete the world '{0-worldName}'?\nDeleting a world is permanent.'
staxel.mainMenu.deleteWorld.Body=
//TODO Translate [Reference] 'Delete World'
staxel.mainMenu.deleteWorld.Title=
//TODO Translate [Reference] 'Currently deleting the world '{0-worldName}'.\nPlease wait.'
staxel.mainMenu.deletingWorld.Body=
//TODO Translate [Reference] 'Delete World'
staxel.mainMenu.deletingWorld.Title=
//TODO Translate [Reference] 'Please wait while the connection to the server closes...'
staxel.mainMenu.disconnecting.Body=
//TODO Translate [Reference] 'Disconnecting'
staxel.mainMenu.disconnecting.Title=
//TODO Translate [Reference] 'Failed to find a server at the address '{0-address}'.\nPlease ensure it is entered correctly, and that you are connected to the internet.'
staxel.mainMenu.FailedToParseIP=
//TODO Translate [Reference] 'Host Game'
staxel.mainMenu.multiPlayer.Host=
//TODO Translate [Reference] 'Join Friend's Game'
staxel.mainMenu.multiPlayer.Join=
//TODO Translate [Reference] 'Looking for Local Games...'
staxel.mainMenu.multiPlayer.LocalConnect=
//TODO Translate [Reference] 'Connecting to Online Services...'
staxel.mainMenu.multiPlayer.OnlineConnect=
//TODO Translate [Reference] 'A world with that name already exists.'
staxel.mainMenu.RenameAlreadyExists=
//TODO Translate [Reference] 'Please wait while the game is being saved...'
staxel.mainMenu.saving.Body=
//TODO Translate [Reference] 'Saving The Game'
staxel.mainMenu.saving.Title=
//TODO Translate [Reference] 'Delete'
staxel.mainMenu.worldOptions.Delete=
//TODO Translate [Reference] 'Play'
staxel.mainMenu.worldOptions.Play=
//TODO Translate [Reference] 'Rename'
staxel.mainMenu.worldOptions.Rename=
//TODO Translate [Reference] 'Create'
staxel.mainMenu.worldSettings.Create=
//TODO Translate [Reference] 'My World'
staxel.mainMenu.worldSettings.DefaultWorldName=
//TODO Translate [Reference] 'Farm Houses'
staxel.mainMenu.worldSettings.FarmHouses=
//TODO Translate [Reference] 'Save'
staxel.mainMenu.worldSettings.Save=
//TODO Translate [Reference] 'World Name'
staxel.mainMenu.worldSettings.WorldName=
//TODO Translate [Reference] 'Accept'
staxel.menu.autosaveHint.Accept=
//TODO Translate [Reference] 'This game uses an autosave feature. Please don’t exit the game or turn off the system while this icon is shown.'
staxel.menu.autosaveHint.Description=
//TODO Translate [Reference] 'Autosave'
staxel.menu.autosaveHint.Title=
//TODO Translate [Reference] 'Change Language'
staxel.menu.ChangeLanguage=
//TODO Translate [Reference] 'Change User'
staxel.menu.ChangeUser=
//TODO Translate [Reference] 'Controller Disconnected'
staxel.menu.controller.Disconnected=
//TODO Translate [Reference] 'Controller Reconnected'
staxel.menu.controller.Reconnected=
//TODO Translate [Reference] 'Press ^b:MenuMain; to continue'
staxel.menu.controller.ReconnectedContinue=
//TODO Translate [Reference] 'Please reconnect your controller to continue'
staxel.menu.controller.RequestReconnect=
//TODO Translate [Reference] 'Getting profile...'
staxel.menu.GettingProfile=
//TODO Translate [Reference] 'Ok'
staxel.menu.mail.AcceptError=
//TODO Translate [Reference] 'Couldn't create mail. You entered an invalid petal number.'
staxel.menu.mail.error.BadPetalInput=
//TODO Translate [Reference] 'Couldn't create mail. You need to select a recipient.'
staxel.menu.mail.error.NoRecipient=
//TODO Translate [Reference] 'Couldn't create mail. You need to enter a subject.'
staxel.menu.mail.error.NoSubject=
//TODO Translate [Reference] 'Couldn't create mail. You don't have enough petals.'
staxel.menu.mail.error.NotEnoughPetals=
//TODO Translate [Reference] 'Back'
staxel.menu.playerList.Back=
//TODO Translate [Reference] 'Banned Players'
staxel.menu.playerList.banned.Title=
//TODO Translate [Reference] 'Unban'
staxel.menu.playerList.banned.Unban=
//TODO Translate [Reference] 'Are you sure you want to ban this player?'
staxel.menu.playerList.options.BanConfirm=
//TODO Translate [Reference] 'Are you sure you want to kick this player?'
staxel.menu.playerList.options.KickConfirm=
//TODO Translate [Reference] 'Player Options'
staxel.menu.playerList.options.Title=
//TODO Translate [Reference] 'Are you sure you want to unban this player?'
staxel.menu.playerList.options.UnbanConfirm=
//TODO Translate [Reference] 'Player List'
staxel.menu.playerList.Title=
//TODO Translate [Reference] 'Press {0-button} to start'
staxel.menu.PressButtonToStart=
//TODO Translate [Reference] 'Change user'
staxel.menu.userChanged.ChangeUser=
//TODO Translate [Reference] 'The player user has been changed without properly exiting the game. \n \n Change back to the original user to ensure no progress is lost.'
staxel.menu.userChanged.Description=
//TODO Translate [Reference] 'Leave without saving'
staxel.menu.userChanged.LeaveWithoutSaving=
//TODO Translate [Reference] 'User Changed'
staxel.menu.userChanged.Title=
//TODO Translate [Reference] 'There are no items to sell.'
staxel.merchant.NoItemsToSell=
//TODO Translate [Reference] 'You need to get permission to buy this!'
staxel.merchant.RequiresGlobal=
//TODO Translate [Reference] 'Your wallet is too full. Try buying some stuff.'
staxel.merchant.TooMuchMoney=
//TODO Translate [Reference] 'Press {0-button} to leave'
staxel.notification.LeaveDock=
//TODO Translate [Reference] 'Can't teleport right now, someone is stopping you.'
staxel.notification.magicTeleport.RequiresGlobal=
//TODO Translate [Reference] 'Your letter has been sent.'
staxel.notification.mail.Sent=
//TODO Translate [Reference] 'This island resets each season and all changes made will be undone.'
staxel.notification.placedOnResetIsland=
//TODO Translate [Reference] 'This tile cannot be broken.'
staxel.notification.tile.UnbreakableTile=
//TODO Translate [Reference] 'Marker is now unfinished.'
staxel.notification.totem.NowInValid=
//TODO Translate [Reference] 'Marker has been finished.'
staxel.notification.totem.NowValid=
//TODO Translate [Reference] 'Marker has just downgraded to tier {0-tier}.'
staxel.notification.totem.TierDecrease=
//TODO Translate [Reference] 'Marker has just upgraded to tier {0-tier}.'
staxel.notification.totem.TierIncrease=
//TODO Translate [Reference] 'You can't break that. The region is being used.'
staxel.notification.TotemRegionInUse=
//TODO Translate [Reference] 'Villager is busy with another villager.'
staxel.notification.villager.VillagerReservedForConversation=
//TODO Translate [Reference] 'Not looking at a water tile.'
staxel.notifications.sponge.NotLookingAtTile=
//TODO Translate [Reference] 'Cannot soak sponge with this tile.'
staxel.notifications.sponge.NotSpongeable=
//TODO Translate [Reference] 'This tool isn't strong enough.'
staxel.notifications.WeakTool=
//TODO Translate [Reference] 'Catalogue Search'
staxel.overlay.catalogue.ShopPage.searchAndFilters.title=
//TODO Translate [Reference] 'Enter a search term'
staxel.overlay.catalogue.ShopPage.searchAndFilters.tooltip=
//TODO Translate [Reference] 'Chat'
staxel.overlay.chat.title=
//TODO Translate [Reference] 'Chat Message'
staxel.overlay.Chat.input.title=
//TODO Translate [Reference] 'Enter your chat message here'
staxel.overlay.Chat.input.tooltip=
//TODO Translate [Reference] 'Console'
staxel.overlay.ConsoleScreen.input.title=
//TODO Translate [Reference] 'Enter a console command'
staxel.overlay.ConsoleScreen.input.tooltip=
//TODO Translate [Reference] 'Creative Search'
staxel.overlay.CreativeMenu.creativeSearch.title=
//TODO Translate [Reference] 'Enter a search term'
staxel.overlay.CreativeMenu.creativeSearch.tooltip=
//TODO Translate [Reference] 'Chat'
staxel.overlay.GameScreen.chat.input.title=
//TODO Translate [Reference] 'Send a message in chat'
staxel.overlay.GameScreen.chat.input.tooltip=
//TODO Translate [Reference] 'Mail Body'
staxel.overlay.inventory.MailCounter.Body.title=
//TODO Translate [Reference] 'Enter your mail message'
staxel.overlay.inventory.MailCounter.Body.tooltip=
//TODO Translate [Reference] 'Petals'
staxel.overlay.inventory.MailCounter.Petals.title=
//TODO Translate [Reference] 'How many petals you wish to send'
staxel.overlay.inventory.MailCounter.Petals.tooltip=
//TODO Translate [Reference] 'Mail Subject'
staxel.overlay.inventory.MailCounter.Subject.title=
//TODO Translate [Reference] 'Enter a subject for the mail'
staxel.overlay.inventory.MailCounter.Subject.tooltip=
//TODO Translate [Reference] 'Recipe Search'
staxel.overlay.inventory.Recipes.recipeSearch.title=
//TODO Translate [Reference] 'Enter a search term'
staxel.overlay.inventory.Recipes.recipeSearch.tooltip=
//TODO Translate [Reference] 'Edit Sign'
staxel.overlay.tile.SignEdit.input.title=
//TODO Translate [Reference] 'What do you want the sign to say?'
staxel.overlay.tile.SignEdit.input.tooltip=
//TODO Translate [Reference] 'Cat'
staxel.pets.Cat=
//TODO Translate [Reference] 'Dog'
staxel.pets.Dog=
//TODO Translate [Reference] 'Rabbit'
staxel.pets.Rabbit=
//TODO Translate [Reference] 'Rosemary's Rabbit'
staxel.pets.RosemaryRabbit=
//TODO Translate [Reference] 'Rosemary's Rabbit'
staxel.pets.RosemaryRabbitForest=
//TODO Translate [Reference] 'The text you entered contained profanity, please enter something else.'
staxel.popup.BadWord.body=
//TODO Translate [Reference] 'Invalid Input'
staxel.popup.BadWord.title=
//TODO Translate [Reference] 'Cancel'
staxel.popup.Cancel=
//TODO Translate [Reference] 'Confirm'
staxel.popup.Confirm=
//TODO Translate [Reference] 'Error'
staxel.popup.Error=
//TODO Translate [Reference] 'Info'
staxel.popup.Info=
//TODO Translate [Reference] 'Please Wait'
staxel.popup.PleaseWait=
//TODO Translate [Reference] '{0-price}: {1-item}'
staxel.priceTag.Common=
//TODO Translate [Reference] 'Are you sure you want to return home? It will cost you {0-petals} petals.'
staxel.returnHome.Body=
//TODO Translate [Reference] 'Return Home'
staxel.returnHome.Title=
//TODO Translate [Reference] 'Goals: {0-goalCount}'
staxel.tile.goals.Nametag=
//TODO Translate [Reference] '{0-player}: {1-petalCount}'
staxel.tile.shippingDock.Nametag=
//TODO Translate [Reference] 'Inside of the Island'
staxel.totem.outsideWorld=
//TODO Translate [Reference] 'Totem is protected, protection must be disable in order to break it.'
staxel.totem.UnbreakableTotem=
//TODO Translate [Reference] '{0-tiles} Tiles away'
staxel.totemEntry.AwayFromTownCount=
//TODO Translate [Reference] 'Has Roof'
staxel.totemEntry.Roof=
//TODO Translate [Reference] 'Building'
staxel.totemRequirement.Building=
//TODO Translate [Reference] 'Any of category'
staxel.totemRequirement.Category=
//TODO Translate [Reference] 'Tile/Object'
staxel.totemRequirement.Tile=
//TODO Translate [Reference] 'Not prepared to transform yet!'
staxel.transformation.CantTransform=
//TODO Translate [Reference] 'You are not transformed!'
staxel.transformation.NotTransformed=
//TODO Translate [Reference] 'Hold ^b:Use; or ^b:Interact; to keep reeling...'
staxel.ui.fishing.message.Reel=
//TODO Translate [Reference] 'Closing the game is taking some time. Please wait.'
staxel.ui.Shutdown=
//TODO Translate [Reference] '{0-name} has left the island.'
staxel.village.villagerLeftIsland=
//TODO Translate [Reference] 'Could not remove accessory as your inventory is full'
staxel.wardrobe.NoEmptyInventorySlots=
//TODO Translate [Reference] 'Wearing'
staxel.wardrobe.Wearing=
